########################################################################################################################
# This script generates configxx.txt files required for phase 2 of simulations (after fixing the features)
########################################################################################################################
# Shahriar S. Heydari, 9/28/2020
import numpy as np
import itertools

#CNNlayers = [[(64,3),(256,3)],[(128,3),(192,3)],[(256,3)],[(192,3),(192,3)],[(64,3),(128,3)],
#             [(192,3),(128,3)],[(128,3),(128,3)],[(128,3),(256,3)]]
#Dropouts = [(0.3, 0.3, 0.1, 0.1), (0.3, 0.3, 0.05, 0.1),(0.3, 0.3, 0.1, 0.05),(0.3, 0.25, 0.1, 0.1),(0.3, 0.25, 0.05, 0.1),
#         (0.3, 0.25, 0.1, 0.05),(0.3, 0.25, 0, 0),(0.3, 0.3, 0, 0),(0.35, 0.25, 0.05, 0.05)]
#neighborhoods = [5,5,3,5,5,5,5,5]*9
#Rlayers = [(320,320,320)]
#Dlayers1 = [(32,32)]
#Dlayers2 = [(128,128,128,128)]
#setofsets = [CNNlayers, Rlayers, Dlayers1, Dlayers2]
#all_configurations = list(itertools.product(*setofsets))*9

all_configurations = [
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.25,0.05,0.05)],
[[(128,3),(96,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(340,340,340),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,340,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(360,320,320),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(280,280,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(128,3),(96,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)],
[[(96,3),(128,3)],(320,300,280,280),(32,32),(128,128,128,128),(0.3,0.3,0.1,0.1)]
]

sim_id = 'GD_'
outFolder = 'D:\\Shahriar\\temp\\configs\\'

for i in range(len(all_configurations)):
    j = int(i/3)
    k = i%3
    m = int(i/20)
    with open(outFolder+'sharedv100_'+str(j+1)+'_'+str(k)+'.txt','w') as f:
        f.write('inFolder = ./input/\n')
        f.write('outFolder = ./output/\n')
        f.write('set_no = {}\n'.format(m))
        f.write('gpu_no = {}\n'.format(k))
        f.write('pid_prefix = {}\n'.format(sim_id+str(j+1)+'_'+str(k)))
        f.write('trainFilePattern = [\'*\']\n')
        f.write('testFilePattern = [\'*\']\n')
        f.write('fixedRecurrentFeatures = 0-7,10,12-14\n')
        f.write('fixedAnnualFeatures = \n')
        f.write('fixedStaticFeatures = 0-2\n')
        f.write('testFeatures = {}\n'.format(0))
        f.write('selectedCNNbands = 0-5,10\n')
        f.write('selectedNeighborhood = 5\n')
        f.write('max_epochs = 150\n')
        f.write('min_epochs = 125\n')
        f.write('es_flag = 25\n')
        f.write('train_batch = 1024\n')
        f.write('train_reduce = 1\n')
        f.write('val_reduce = 5.84\n')
        f.write('test_reduce = 2.34\n')
        f.write('CLayers = {}\n'.format(all_configurations[i][0]))
        f.write('RLayers = {}\n'.format(all_configurations[i][1]))
        f.write('DLayers1 = {}\n'.format(all_configurations[i][2]))
        f.write('DLayers2 = {}\n'.format(all_configurations[i][3]))
        D = all_configurations[i][4]
        Drops = []
        if len(all_configurations[i][4]) > 0:
            for l in range(len(all_configurations[i][0])):
                Drops.append(D[0])
            for l in range(len(all_configurations[i][1])):
                Drops.append(D[1])
            for l in range(len(all_configurations[i][2])):
                Drops.append(D[2])
            for l in range(len(all_configurations[i][3])):
                Drops.append(D[3])
        f.write('Dropouts = {}\n'.format(Drops))
        f.write('Batch_norm = \n')
        f.write('optimizer_type = Adam\n')
        f.write('optimizer_args = {\'lr\':')
        f.write(str(0.001))
        f.write(', \'amsgrad\':True}\n')
        f.write('kernel_reg = \n')
        f.write('recurrent_reg = \n')
        f.write('Conv_reg = \n')
        f.write('dense_act = tanh\n')
        f.write('CNN_act = relu\n')
        f.write('generateF1 = True\n')
        f.write('cacheTrainDataset = False\n')
        f.write('cacheValDataset = True\n')
        f.write('float16_flag = True\n')
        f.write('extendedLogTest = 0')
        print(sim_id,j+1,'_',k,all_configurations[i][0],D)
